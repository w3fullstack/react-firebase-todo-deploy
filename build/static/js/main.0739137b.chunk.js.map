{"version":3,"sources":["logo.svg","serviceWorker.js","components/ToDoItem.jsx","components/ToDo.jsx","App.js","Routes.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ToDoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickEdit","subject","state","setState","editing","prev_subject","handleClickDelete","removeCallback","index","handleClickClose","handleClickUpdate","editCallback","_this$state","_this2","_this$state2","react_default","a","createElement","className","input","style","marginRight","disabled","value","onChange","e","target","es_button","type","onClick","icon","theme","React","Component","ToDo","new_todo_text","loading","todo_list","fetchToDo","asyncToGenerator","regenerator_default","mark","_callee","response","body","wrap","_context","prev","next","axios","get","sent","data","abrupt","stop","addToDo","_ref2","_callee2","rawResponse","content","_context2","post","_x","apply","arguments","removeToDo","_ref3","_callee3","id","_context3","_x2","updateToDo","_ref4","_callee4","_context4","_x3","_x4","handleFetchTodo","then","res","result","catch","err","openNotificationWithIcon","handleClickAdd","length","undefined","error","message","notification","config","placement","card","title","href","avatar","src","bordered","width","extra","placeholder","map","ToDoItem_ToDoItem","key","App","routing","BrowserRouter","Route","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0739137b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport { Icon, Button, Input } from \"antd\";\r\n\r\nexport default class ToDoItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            prev_subject: '',\r\n            subject: props.subject,\r\n            editing: false,\r\n            index: props.index,\r\n        }\r\n    }\r\n\r\n    handleClickEdit = () => {\r\n        const { subject } = this.state;\r\n        this.setState({editing: true, prev_subject: subject});\r\n    }\r\n\r\n    handleClickDelete = () => {\r\n        const { removeCallback } = this.props;\r\n        const { index } = this.state;\r\n        removeCallback(index);\r\n    }\r\n\r\n    handleClickClose = () => {\r\n        const { prev_subject } = this.state;\r\n        this.setState({editing: false, subject: prev_subject});\r\n    }\r\n\r\n    handleClickUpdate = () => {\r\n        const { editCallback } = this.props;\r\n        const { index, subject } = this.state;\r\n        editCallback(index, subject);\r\n        this.setState({editing: false});\r\n    }\r\n\r\n\r\n    render() {\r\n        const {subject, editing} = this.state;\r\n        return (\r\n            <div className=\"ToDoItem\">\r\n                <Input style={{marginRight: 10}} disabled={!editing} value={subject} onChange={(e)=>{this.setState({subject: e.target.value})}}/>\r\n                { editing ? \r\n                    <div className=\"flex\">\r\n                        <Button type=\"default\" style={{marginRight: 10}} onClick={this.handleClickUpdate}><Icon type=\"check\" theme=\"outlined\"/></Button>\r\n                        <Button type=\"danger\" onClick={this.handleClickClose}><Icon type=\"close\" theme=\"outlined\" /></Button> \r\n                    </div>\r\n                : < div className=\"flex\">\r\n                        <Button type=\"default\" style={{marginRight: 10}} onClick={this.handleClickEdit}><Icon type=\"edit\" theme=\"outlined\" /></Button>\r\n                        <Button type=\"danger\" onClick={this.handleClickDelete}><Icon type=\"delete\" theme=\"outlined\" /></Button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Avatar, Card, Icon, Button, Input, notification } from \"antd\";\r\nimport ToDoItem from \"components/ToDoItem\";\r\nimport axios from \"axios\";\r\n\r\nexport default class ToDo extends React.Component {\r\n    state = {\r\n        new_todo_text: '',\r\n        loading: true,\r\n        todo_list: [],\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.handleFetchTodo();\r\n    }\r\n\r\n    // fetch api\r\n    fetchToDo = async () => {\r\n        let url = 'https://us-central1-todo-34d03.cloudfunctions.net/webApi/api/getToDoList';\r\n        const response = await axios.get(url);\r\n        const body = response.data;\r\n        return body;\r\n    }\r\n\r\n    addToDo = async (subject) => {\r\n        let url = 'https://us-central1-todo-34d03.cloudfunctions.net/webApi/api/addToDo';\r\n        const rawResponse = await axios.post(url, {subject});\r\n        const content = rawResponse.data;\r\n        return content;\r\n    }\r\n\r\n    removeToDo = async (id) => {\r\n        let url = 'https://us-central1-todo-34d03.cloudfunctions.net/webApi/api/delete';\r\n        const rawResponse = await axios.post(url, {id});\r\n        const content = rawResponse.data;\r\n        return content;\r\n    }\r\n\r\n    updateToDo = async (id, subject) => {\r\n        let url = 'https://us-central1-todo-34d03.cloudfunctions.net/webApi/api/edit';\r\n        const rawResponse = await axios.post(url, {id, subject});\r\n        const content = rawResponse.data;\r\n        return content;\r\n    }\r\n\r\n    // callbacks\r\n    handleFetchTodo = () => {\r\n        this.setState({loading: true, todo_list: []});\r\n\r\n        this.fetchToDo()\r\n        .then(res => {\r\n            this.setState({todo_list: res.result, loading: false});\r\n        })\r\n        .catch(err => this.openNotificationWithIcon('error', 'Fetch failed!'));\r\n    }\r\n\r\n    handleClickAdd = () => {\r\n        const {new_todo_text} = this.state;\r\n        if (new_todo_text.length == 0) return;\r\n\r\n        this.addToDo(new_todo_text)\r\n        .then(res => {\r\n            if (res.error === undefined && res.result) {\r\n                this.openNotificationWithIcon('success', 'Added successfully!');\r\n                this.setState({new_todo_text: ''});\r\n                this.handleFetchTodo();\r\n            }\r\n        })\r\n        .catch(err => this.openNotificationWithIcon('error', 'Add failed!'));\r\n    }\r\n\r\n    removeCallback = (id) => {\r\n        this.removeToDo(id)\r\n        .then(res => {\r\n            if (res.error === undefined && res.result) {\r\n                this.openNotificationWithIcon('success', 'Removed successfully!');\r\n                this.setState({new_todo_text: ''});\r\n                this.handleFetchTodo();\r\n            }\r\n        })\r\n        .catch(err => this.openNotificationWithIcon('error', 'Remove failed!'));\r\n    }\r\n\r\n    editCallback = (id, subject) => {\r\n        this.updateToDo(id, subject)\r\n        .then(res => {\r\n            if (res.error === undefined && res.result) {\r\n                this.openNotificationWithIcon('success', 'Updated successfully!');\r\n                this.setState({new_todo_text: ''});\r\n                this.handleFetchTodo();\r\n            }\r\n        })\r\n        .catch(err => this.openNotificationWithIcon('error', 'Update failed!'));\r\n    }\r\n\r\n    openNotificationWithIcon = (type, message) => {\r\n        notification.config({\r\n            placement: 'bottomRight'\r\n        })\r\n        notification[type]({\r\n            message: message,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {new_todo_text, loading, todo_list} = this.state;\r\n        return (\r\n            <div className=\"ToDo\">\r\n                <Card title={ <span><a href=\"https://www.upwork.com/fl/andriimoroz5\" target=\"blank\"><Avatar src=\"https://odesk-prod-portraits.s3.amazonaws.com/Users:andrii-moroz:PortraitUrl_100?AWSAccessKeyId=AKIAIKIUKM3HBSWUGCNQ&Expires=2147483647&Signature=0SLjREr5ma3P7fULePzCP2TR%2Fpw%3D\"/> Andrii Moroz</a></span>} bordered={true} style={{ width: 600 }}\r\n                    extra={\r\n                        <div className=\"add-section\">\r\n                            <Input value={new_todo_text} placeholder=\"Please input new To-Do subject\" style={{marginRight: 10}} onChange={(e)=>{this.setState({new_todo_text: e.target.value})}}/>\r\n                            <Button type=\"primary\" onClick={this.handleClickAdd}><Icon type=\"plus\" theme=\"outlined\"/>Add</Button>\r\n                        </div>\r\n                    }>\r\n                    <div className=\"todo-list\">\r\n                        { loading ? \r\n                            <Icon type=\"loading\" theme=\"outlined\" />\r\n                        :   todo_list.map((data, index) => (\r\n                                <ToDoItem subject={data.subject} index={data.id} key={data.id} removeCallback={this.removeCallback} editCallback={this.editCallback} />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return { auth: state.auth };\r\n// };\r\n\r\n// export default connect(mapStateToProps, { logoutProp: logout })(Header);\r\n\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport ToDo from \"components/ToDo\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          App\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport {Route, BrowserRouter as Router} from 'react-router-dom';\r\nimport App from './App';\r\nimport ToDo from 'components/ToDo';\r\n\r\nconst routing = (\r\n    <Router>\r\n        <div>\r\n            <Route path=\"/home\" component={App} />\r\n            <Route path=\"/\" component={ToDo} />\r\n        </div>\r\n    </Router>\r\n);\r\n\r\nexport default routing;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport routing from './Routes';\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
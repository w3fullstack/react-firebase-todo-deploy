{"version":3,"sources":["logo.svg","serviceWorker.js","components/ToDoItem.jsx","actions/FetchList.js","actions/UpdateItem.js","actions/AddItem.js","actions/DeleteItem.js","components/ToDo.jsx","App.js","Routes.js","reducers/Todos.js","reducers/index.js","apis/FetchList.js","apis/UpdateItem.js","apis/AddItem.js","apis/DeleteItem.js","sagas/saga.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ToDoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickEdit","subject","state","setState","editing","prev_subject","handleClickDelete","removeCallback","index","handleClickClose","handleClickUpdate","editCallback","_this$state","_this2","_this$state2","react_default","a","createElement","className","input","style","marginRight","disabled","value","onChange","e","target","es_button","type","onClick","icon","theme","React","Component","FETCH_LIST","FETCH_SUCCESS","FETCH_FAILED","UPDATE_ITEM","UPDATE_SUCCESS","UPDATE_FAILED","ADD_ITEM","ADD_SUCCESS","ADD_FAILED","DELETE_ITEM","DELETE_SUCCESS","DELETE_FAILED","ToDo","new_todo_text","handleFetchTodo","handleFetchList","handleClickAdd","length","handleAddItem","id","showConfirm","handleDeleteItem","handleUpdateItem","title","okText","cancelText","onOkCallback","Modal","confirm","okType","onOk","onCancel","_this$props","loading","todoList","card","href","avatar","src","bordered","width","extra","placeholder","map","data","ToDoItem_ToDoItem","key","connect","todos","apiResult","errorMsg","dispatch","payload","addItem","updateItem","deleteItem","App","routing","BrowserRouter","Route","path","component","INITIAL_STATE","hasNotification","openNotificationWithIcon","message","notification","config","placement","TodosReducer","arguments","undefined","action","objectSpread","AppReducer","combineReducers","fetchList","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","body","wrap","_context","prev","next","axios","get","sent","abrupt","stop","apply","_ref2","rawResponse","content","console","log","post","_x","takeFetchList","takeUpdateItem","takeDeleteItem","takeAddItem","fetchListAsync","updateItemAsync","addItemAsync","deleteItemAsync","rootSaga","takeLatest","_marked","_context2","_marked2","_context3","_marked3","_context4","_marked4","_context5","put","result","t0","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","all","_marked9","sagaMw","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9bbb1cef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport { Icon, Button, Input } from \"antd\";\r\n\r\nexport default class ToDoItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            prev_subject: '',\r\n            subject: props.subject,\r\n            editing: false,\r\n            index: props.index,\r\n        }\r\n    }\r\n\r\n    handleClickEdit = () => {\r\n        const { subject } = this.state;\r\n        this.setState({editing: true, prev_subject: subject});\r\n    }\r\n\r\n    handleClickDelete = () => {\r\n        const { removeCallback } = this.props;\r\n        const { index } = this.state;\r\n        removeCallback(index);\r\n    }\r\n\r\n    handleClickClose = () => {\r\n        const { prev_subject } = this.state;\r\n        this.setState({editing: false, subject: prev_subject});\r\n    }\r\n\r\n    handleClickUpdate = () => {\r\n        const { editCallback } = this.props;\r\n        const { index, subject } = this.state;\r\n        editCallback(index, subject);\r\n        this.setState({editing: false});\r\n    }\r\n\r\n\r\n    render() {\r\n        const {subject, editing} = this.state;\r\n        return (\r\n            <div className=\"ToDoItem\">\r\n                <Input style={{marginRight: 10}} disabled={!editing} value={subject} onChange={(e)=>{this.setState({subject: e.target.value})}}/>\r\n                { editing ? \r\n                    <div className=\"flex\">\r\n                        <Button type=\"default\" style={{marginRight: 10}} onClick={this.handleClickUpdate}><Icon type=\"check\" theme=\"outlined\"/></Button>\r\n                        <Button type=\"danger\" onClick={this.handleClickClose}><Icon type=\"close\" theme=\"outlined\" /></Button> \r\n                    </div>\r\n                : < div className=\"flex\">\r\n                        <Button type=\"default\" style={{marginRight: 10}} onClick={this.handleClickEdit}><Icon type=\"edit\" theme=\"outlined\" /></Button>\r\n                        <Button type=\"danger\" onClick={this.handleClickDelete}><Icon type=\"delete\" theme=\"outlined\" /></Button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const FETCH_LIST = 'Fetch list';\nexport const FETCH_SUCCESS = 'Fetch success';\nexport const FETCH_FAILED = 'Fetch failed';\n\nexport const fetchList = () => ({\n  type: FETCH_LIST,\n});\n","export const UPDATE_ITEM = 'Update item';\r\nexport const UPDATE_SUCCESS = 'Update success';\r\nexport const UPDATE_FAILED = 'Update failed';\r\n\r\nexport const updateItem = (id, subject) => ({\r\n  type: UPDATE_ITEM,\r\n  payload: { id, subject }\r\n});\r\n","export const ADD_ITEM = 'Add item';\r\nexport const ADD_SUCCESS = 'Add success';\r\nexport const ADD_FAILED = 'Add failed';\r\n\r\nexport const addItem = (subject) => ({\r\n  type: ADD_ITEM,\r\n  payload: { subject }\r\n});\r\n","export const DELETE_ITEM = 'Delete item';\r\nexport const DELETE_SUCCESS = 'Delete success';\r\nexport const DELETE_FAILED = 'Delete failed';\r\n\r\nexport const deleteItem = (id) => ({\r\n  type: DELETE_ITEM,\r\n  payload: { id }\r\n});\r\n","import React from \"react\";\r\nimport {Avatar, Card, Icon, Button, Input, Modal } from \"antd\";\r\nimport ToDoItem from \"components/ToDoItem\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchList } from 'actions/FetchList';\r\nimport { updateItem } from 'actions/UpdateItem';\r\nimport { addItem } from 'actions/AddItem';\r\nimport { deleteItem } from 'actions/DeleteItem';\r\n\r\nclass ToDo extends React.Component {\r\n    state = {\r\n        new_todo_text: '',\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.handleFetchTodo();\r\n    }\r\n\r\n    // callbacks\r\n    handleFetchTodo = () => {\r\n        this.props.handleFetchList();\r\n    }\r\n\r\n    handleClickAdd = () => {\r\n        const {new_todo_text} = this.state;\r\n        if (new_todo_text.length == 0) return;\r\n        this.setState({new_todo_text: ''});\r\n        this.props.handleAddItem(new_todo_text);\r\n    }\r\n\r\n    removeCallback = (id) => {\r\n        this.showConfirm('Remove Item', 'Ok', 'Cancel', () => {\r\n            this.props.handleDeleteItem(id);\r\n        });\r\n    }\r\ncomponentupdated\r\n    editCallback = (id, subject) => {\r\n        this.props.handleUpdateItem(id, subject);\r\n    }\r\n\r\n    showConfirm = (title, okText, cancelText, onOkCallback ) => {\r\n        Modal.confirm({\r\n          title: title,\r\n          okText: okText,\r\n          okType: 'primary',\r\n          cancelText: cancelText,\r\n          onOk() {\r\n            onOkCallback();\r\n          },\r\n          onCancel() {},\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {new_todo_text } = this.state;\r\n        const { loading, todoList } = this.props;\r\n\r\n        return (\r\n            <div className=\"ToDo\">\r\n                <Card title={ <span><a href=\"https://www.upwork.com/freelancers/~01f1d011bebafd7fe9?viewMode=1\" target=\"blank\"><Avatar src=\"https://odesk-prod-portraits.s3.amazonaws.com/Users:josoutsider:PortraitUrl_100?AWSAccessKeyId=AKIAIKIUKM3HBSWUGCNQ&Expires=2147483647&Signature=3jFAXEwJMwfPvTFwkdw%2BPVvv3xA%3D&1545150145766322&1545756556373\"/> Jose Robert</a></span>} bordered={true} style={{ width: 600 }}\r\n                    extra={\r\n                        <div className=\"add-section\">\r\n                            <Input value={new_todo_text} placeholder=\"Please input new To-Do subject\" style={{marginRight: 10}} onChange={(e)=>{this.setState({new_todo_text: e.target.value})}}/>\r\n                            <Button type=\"primary\" onClick={this.handleClickAdd}><Icon type=\"plus\" theme=\"outlined\"/>Add</Button>\r\n                        </div>\r\n                    }>\r\n                    <div className=\"todo-list\">\r\n                        { loading ? \r\n                            <Icon type=\"loading\" theme=\"outlined\" />\r\n                        :   todoList.map((data) => (\r\n                                <ToDoItem subject={data.subject} index={data.id} key={data.id} removeCallback={this.removeCallback} editCallback={this.editCallback} />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.todos.loading,\r\n        todoList: state.todos.todoList,\r\n        apiResult: state.todos.apiResult,\r\n        errorMsg: state.todos.errorMsg,\r\n    }\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        handleFetchList: () => { dispatch(fetchList()) },\r\n        handleAddItem: (subject) => { dispatch(addItem(subject)) },\r\n        handleUpdateItem: (id, subject) => { dispatch(updateItem(id, subject)) },\r\n        handleDeleteItem: (id) => { dispatch(deleteItem(id)) },\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(ToDo);\r\n\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport ToDo from \"components/ToDo\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          App\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport {Route, BrowserRouter as Router} from 'react-router-dom';\r\nimport App from './App';\r\nimport ToDo from 'components/ToDo';\r\n\r\nconst routing = (\r\n    <Router>\r\n        <div>\r\n            <Route path=\"/home\" component={App} />\r\n            <Route path=\"/\" component={ToDo} />\r\n        </div>\r\n    </Router>\r\n);\r\n\r\nexport default routing;","import { ADD_ITEM, ADD_SUCCESS, ADD_FAILED } from 'actions/AddItem';\nimport { FETCH_LIST, FETCH_SUCCESS, FETCH_FAILED } from 'actions/FetchList';\nimport { DELETE_ITEM, DELETE_SUCCESS, DELETE_FAILED } from 'actions/DeleteItem';\nimport { UPDATE_ITEM, UPDATE_SUCCESS, UPDATE_FAILED } from 'actions/UpdateItem';\nimport { notification } from \"antd\";\n\nconst INITIAL_STATE = {\n\tloading: false,\n\ttodoList: [],\n\thasNotification: false,\n\tapiResult: true,\n\terrorMsg: '',\n};\n\nconst TodosReducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_ITEM:\n\t\t\treturn { ...state, loading: true, todoList: [] };\n\t\tcase ADD_SUCCESS:\n\t\t\topenNotificationWithIcon('success', 'Added successfully!');\n\t\t\treturn { ...state };\n\t\tcase ADD_FAILED:\n\t\t\topenNotificationWithIcon('success', 'Adding was failed!');\n\t\t\treturn { ...state, loading: false };\n\n\t\tcase FETCH_LIST:\n\t\t\treturn { ...state, loading: true, todoList: [] };\n\t\tcase FETCH_SUCCESS:\n\t\t\topenNotificationWithIcon('success', 'Fetched successfully!');\n\t\t\treturn { ...state, loading: false, todoList: action.data };\n\t\tcase FETCH_FAILED:\n\t\t\topenNotificationWithIcon('success', 'Fetching was failed!');\n\t\t\treturn { ...state, loading: false };\n\t\t\t\n\t\tcase UPDATE_ITEM:\n\t\t\treturn { ...state, loading: true, todoList: [] };\n\t\tcase UPDATE_SUCCESS:\n\t\t\topenNotificationWithIcon('success', 'Updated successfully!');\n\t\t\treturn { ...state };\n\t\tcase UPDATE_FAILED:\n\t\t\topenNotificationWithIcon('success', 'Updating was failed!');\n\t\t\treturn { ...state, loading: false };\n\t\t\t\n\t\tcase DELETE_ITEM:\n\t\t\treturn { ...state, loading: true, todoList: [] };\n\t\tcase DELETE_SUCCESS:\n\t\t\topenNotificationWithIcon('success', 'Deleted successfully!');\n\t\t\treturn { ...state };\n\t\tcase DELETE_FAILED:\n\t\t\topenNotificationWithIcon('success', 'Deleting was failed!');\n\t\t\treturn { ...state, loading: false };\n\t\t\t\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n  \t}\n};\n\n\nconst openNotificationWithIcon = (type, message) => {\n\tnotification.config({\n\t\tplacement: 'bottomRight'\n\t})\n\tnotification[type]({\n\t\tmessage: message,\n\t});\n};\n\nexport default TodosReducer;\n","import { combineReducers } from 'redux';\n\nimport TodosReducer from 'reducers/Todos';\n\nconst AppReducer = combineReducers({\n  todos: TodosReducer,\n});\n\nexport default AppReducer;\n","import axios from \"axios\";\r\n\r\nexport const fetchList = async () => {\r\n    const url = 'https://us-central1-todo-34d03.cloudfunctions.net/webApi/api/getToDoList';\r\n    const response = await axios.get(url);\r\n    const body = response.data;\r\n    return body;\r\n}","import axios from \"axios\";\r\n\r\nexport const updateItem = async ({id, subject}) => {\r\n    console.log(id, subject);\r\n    let url = 'https://us-central1-todo-34d03.cloudfunctions.net/webApi/api/edit';\r\n    const rawResponse = await axios.post(url, {id, subject});\r\n    const content = rawResponse.data;\r\n    return content;\r\n}","import axios from \"axios\";\r\n\r\nexport const addItem = async ({subject}) => {\r\n    let url = 'https://us-central1-todo-34d03.cloudfunctions.net/webApi/api/addToDo';\r\n    const rawResponse = await axios.post(url, {subject});\r\n    const content = rawResponse.data;\r\n    return content;\r\n}","import axios from \"axios\";\r\n\r\nexport const deleteItem = async ({id}) => {\r\n    let url = 'https://us-central1-todo-34d03.cloudfunctions.net/webApi/api/delete';\r\n    const rawResponse = await axios.post(url, {id});\r\n    const content = rawResponse.data;\r\n    return content;\r\n}","import { takeEvery, takeLatest, call, put, all } from 'redux-saga/effects';\r\nimport { ADD_ITEM, ADD_SUCCESS, ADD_FAILED } from 'actions/AddItem';\r\nimport { FETCH_LIST, FETCH_SUCCESS, FETCH_FAILED } from 'actions/FetchList';\r\nimport { DELETE_ITEM, DELETE_SUCCESS, DELETE_FAILED } from 'actions/DeleteItem';\r\nimport { UPDATE_ITEM, UPDATE_SUCCESS, UPDATE_FAILED } from 'actions/UpdateItem';\r\nimport { fetchList } from 'apis/FetchList';\r\nimport { updateItem } from 'apis/UpdateItem';\r\nimport { addItem } from 'apis/AddItem';\r\nimport { deleteItem } from 'apis/DeleteItem';\r\n\r\nfunction* takeFetchList() {\r\n    yield takeLatest(FETCH_LIST, fetchListAsync);\r\n}\r\n\r\nfunction* takeUpdateItem() {\r\n    yield takeLatest(UPDATE_ITEM, updateItemAsync);\r\n}\r\n\r\nfunction* takeDeleteItem() {\r\n    yield takeLatest(DELETE_ITEM, deleteItemAsync);\r\n}\r\n\r\nfunction* takeAddItem() {\r\n    yield takeLatest(ADD_ITEM, addItemAsync);\r\n}\r\n\r\nfunction* fetchListAsync(action) {\r\n    try {\r\n        const response = yield call(fetchList);\r\n        yield put({type: FETCH_SUCCESS, data: response.result});\r\n    } catch (e) {\r\n        yield put({type: FETCH_FAILED});\r\n    }\r\n}\r\n\r\nfunction* updateItemAsync(action) {\r\n    try {\r\n        const response = yield call(updateItem, action.payload);\r\n        yield put({type: UPDATE_SUCCESS});\r\n        yield put({type: FETCH_LIST});\r\n    } catch (e) {\r\n        yield put({type: UPDATE_FAILED});\r\n    }\r\n}\r\n\r\nfunction* addItemAsync(action) {\r\n    try {\r\n        const response = yield call(addItem, action.payload);\r\n        yield put({type: ADD_SUCCESS});\r\n        yield put({type: FETCH_LIST});\r\n    } catch (e) {\r\n        yield put({type: ADD_FAILED});\r\n    }\r\n}\r\n\r\nfunction* deleteItemAsync(action) {\r\n    try {\r\n        const response = yield call(deleteItem, {id: action.payload.id});\r\n        yield put({type: DELETE_SUCCESS});\r\n        yield put({type: FETCH_LIST});\r\n    } catch (e) {\r\n        yield put({type: DELETE_FAILED});\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        takeFetchList(),\r\n        takeUpdateItem(),\r\n        takeAddItem(),\r\n        takeDeleteItem(),\r\n    ])\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport routing from './Routes';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport AppReducer from './reducers';\nimport rootSaga from 'sagas/saga'\n\nconst sagaMw = createSagaMiddleware();\nconst store = createStore(AppReducer, applyMiddleware(sagaMw));\n\nsagaMw.run(rootSaga);\n\nReactDOM.render(\n    <Provider store={store}>\n        { routing }\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}